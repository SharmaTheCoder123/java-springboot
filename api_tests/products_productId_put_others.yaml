# ********RoostGPT********

# Test generated by RoostGPT for test API-Verify using AI Type  and AI Model 
# 
# Test generated for /products/{productId}_put for http method type PUT in artillery framework
# RoostTestHash=6762b8ac71
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "products_productId_put_others.csv"
    fields:
      - "id"
      - "name"
      - "description"
      - "price"
    skipHeader: true
    delimiter: "^|^"
  environments:
    dev:
      target: "http://dev.api.host"
      $processEnvironment:
        AUTH_TOKEN: "dev-auth-token"
    prod:
      target: "http://prod.api.host"
      $processEnvironment:
        AUTH_TOKEN: "prod-auth-token"

scenarios:
  - name: "Non-Success API Responses Scenario"
    flow:
      - log: "Attempting to update a product with invalid id"
      - put:
          url: "/products/{{ id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 404
            - hasProperty: "error"
            - equals:
                - "error.message"
                - "Product not found"
      - think: 1

      - log: "Attempting to update a product without authorization token"
      - put:
          url: "/products/{{ id }}"
          headers:
            Content-Type: "application/json"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 401
            - hasProperty: "error"
            - equals:
                - "error.message"
                - "Unauthorized"
      - think: 1

      - log: "Attempting to update a product with invalid data"
      - put:
          url: "/products/{{ id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            id: "{{ id }}"
            name: ""
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - equals:
                - "error.message"
                - "Invalid product data"
      - think: 1

      - log: "Attempting to update a product with non-existent URL"
      - put:
          url: "/non_existent/{{ id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.AUTH_TOKEN}}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 404
      - think: 1
